{
	"info": {
		"_postman_id": "80f1e9ab-ebdc-4a5f-8d18-b69f243bfe0f",
		"name": "otus_homework_helm",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ping",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"ping: response 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "arch.homework:80/ping",
					"host": [
						"arch",
						"homework"
					],
					"port": "80",
					"path": [
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "health",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get health: response 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"get health: status ok\", function () {",
							"    var userId = JSON.parse(responseBody)[\"status\"];",
							"    pm.expect(userId).to.eq(\"OK\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "arch.homework:80/health",
					"host": [
						"arch",
						"homework"
					],
					"port": "80",
					"path": [
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"user create: response 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"user create: userId is set\", function () {",
							"    var userId = JSON.parse(responseBody)[\"id\"];",
							"    pm.expect(userId).not.undefined;",
							"    pm.collectionVariables.set(\"userId\", userId);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": false
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"firstname\": \"Bob\",\n\t\"lastname\": \"Foo\",\n\t\"email\": \"{{$randomEmail}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "arch.homework:80/user",
					"host": [
						"arch",
						"homework"
					],
					"port": "80",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "get",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"user get: response 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"user get: correct userId\", function () {",
							"    var userId = JSON.parse(responseBody)[\"id\"];",
							"    pm.expect(userId).to.eq(pm.collectionVariables.get(\"userId\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "arch.homework:80/user/{{userId}}",
					"host": [
						"arch",
						"homework"
					],
					"port": "80",
					"path": [
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "modify",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"user modify: OK\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(responseBody).to.eq(\"\\\"OK\\\"\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"firstname\": \"Bob\",\n\t\"lastname\": \"{{$randomLastName}}\",\n\t\"email\": \"bob.foo@mail.net\"\n}"
				},
				"url": {
					"raw": "arch.homework:80/user/{{userId}}",
					"host": [
						"arch",
						"homework"
					],
					"port": "80",
					"path": [
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"user delete: OK\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(responseBody).to.eq(\"\\\"OK\\\"\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"firstname\": \"Bob\",\n\t\"lastname\": \"Foo\",\n\t\"email\": \"bob.foo@mail.net\"\n}"
				},
				"url": {
					"raw": "arch.homework:80/user/{{userId}}",
					"host": [
						"arch",
						"homework"
					],
					"port": "80",
					"path": [
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get deleted user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"user get deleted user: not found\", function () {",
							"    pm.response.to.have.status(404);",
							"    pm.expect(JSON.parse(responseBody)[\"detail\"]).to.eq(\"User not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "arch.homework:80/user/{{userId}}",
					"host": [
						"arch",
						"homework"
					],
					"port": "80",
					"path": [
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userId",
			"value": ""
		}
	]
}